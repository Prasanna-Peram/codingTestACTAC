{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      book: {\n        title: '',\n        author: '',\n        genre: '',\n        published_year: '',\n        description: ''\n      },\n      errorMessage: '',\n      sucessMessage: ''\n    };\n  },\n  mounted() {\n    this.fetchBook();\n  },\n  methods: {\n    validateAndSubmit() {\n      const authorParts = this.book.author.trim().split(' ');\n      if (authorParts.length < 2) {\n        this.errorMessage = 'Author must include a first and last name.';\n        return;\n      }\n      if (this.book.description.length < 100) {\n        this.errorMessage = 'Description must be at least 100 characters.';\n        return;\n      }\n      this.errorMessage = '';\n      this.updateBook();\n    },\n    fetchBook() {\n      axios.get(`books/edit/${this.$route.params.id}`).then(response => {\n        this.book = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    updateBook() {\n      axios.put(`books/update/${this.$route.params.id}`, this.book).then(response => {\n        if (response.data.status === \"success\") {\n          this.sucessMessage = \"Book Added Successfully\";\n          this.$router.push('/');\n          setTimeout(() => {\n            this.sucessMessage = \"\";\n          }, 5000);\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","book","title","author","genre","published_year","description","errorMessage","sucessMessage","mounted","fetchBook","methods","validateAndSubmit","authorParts","trim","split","length","updateBook","get","$route","params","id","then","response","catch","error","console","put","status","$router","push","setTimeout"],"sources":["src/components/EditBook.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Edit Book</h2>\r\n        <form @submit.prevent=\"validateAndSubmit\">\r\n            <input v-model=\"book.title\" class=\"form-control\" placeholder=\"Title\" required /> <br/>\r\n            <input v-model=\"book.author\" class=\"form-control\" placeholder=\"Author (First Last)\" required />  <br/> \r\n            <input v-model=\"book.genre\" class=\"form-control\" placeholder=\"Genre\" required />   <br/>\r\n            <input v-model=\"book.published_year\" type=\"number\" min=\"1\" class=\"form-control\" placeholder=\"Published Year\" required />   <br/>\r\n            <textarea v-model=\"book.description\" class=\"form-control\" placeholder=\"Description\" required></textarea>  <br/>\r\n            <button type=\"submit\" class=\"btn btn-success\">Update</button>   <br/>\r\n            <div v-if=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n             book: {\r\n                title: '',\r\n                author: '',\r\n                genre: '',\r\n                published_year: '',\r\n                description: ''\r\n            },\r\n            errorMessage: '',\r\n            sucessMessage: ''\r\n        };\r\n    },\r\n     mounted() {\r\n        this.fetchBook();\r\n    },\r\n    methods: {\r\n          validateAndSubmit() {\r\n            const authorParts = this.book.author.trim().split(' ');\r\n            if (authorParts.length < 2) {\r\n                this.errorMessage = 'Author must include a first and last name.';\r\n                return;\r\n            }\r\n\r\n            if (this.book.description.length < 100) {\r\n                this.errorMessage = 'Description must be at least 100 characters.';\r\n                return;\r\n            }\r\n\r\n            this.errorMessage = '';\r\n            this.updateBook();\r\n        },\r\n        fetchBook() {\r\n            axios.get(`books/edit/${this.$route.params.id}`)\r\n                .then(response => {\r\n                    this.book = response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n        updateBook() {\r\n            axios.put(`books/update/${this.$route.params.id}`, this.book)\r\n                .then(response => {\r\n                   \r\n                    if(response.data.status === \"success\")\r\n                    {\r\n                        this.sucessMessage = \"Book Added Successfully\";\r\n                        this.$router.push('/');\r\n                         setTimeout(() => {\r\n                            this.sucessMessage = \"\";\r\n                        }, 5000);\r\n                        \r\n                    } \r\n                   \r\n                })\r\n                .catch(error => {\r\n                            console.error(error);\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":";AAiBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAC,MAAA;QACAC,KAAA;QACAC,cAAA;QACAC,WAAA;MACA;MACAC,YAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAC,kBAAA;MACA,MAAAC,WAAA,QAAAZ,IAAA,CAAAE,MAAA,CAAAW,IAAA,GAAAC,KAAA;MACA,IAAAF,WAAA,CAAAG,MAAA;QACA,KAAAT,YAAA;QACA;MACA;MAEA,SAAAN,IAAA,CAAAK,WAAA,CAAAU,MAAA;QACA,KAAAT,YAAA;QACA;MACA;MAEA,KAAAA,YAAA;MACA,KAAAU,UAAA;IACA;IACAP,UAAA;MACAX,KAAA,CAAAmB,GAAA,oBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA,IACAC,IAAA,CAAAC,QAAA;QACA,KAAAtB,IAAA,GAAAsB,QAAA,CAAAvB,IAAA;MACA,GACAwB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAR,WAAA;MACAlB,KAAA,CAAA4B,GAAA,sBAAAR,MAAA,CAAAC,MAAA,CAAAC,EAAA,SAAApB,IAAA,EACAqB,IAAA,CAAAC,QAAA;QAEA,IAAAA,QAAA,CAAAvB,IAAA,CAAA4B,MAAA,gBACA;UACA,KAAApB,aAAA;UACA,KAAAqB,OAAA,CAAAC,IAAA;UACAC,UAAA;YACA,KAAAvB,aAAA;UACA;QAEA;MAEA,GACAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}